<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20211.21.0320.1853                               -->
<workbook original-version='18.1' source-build='2021.1.0 (20211.21.0320.1853)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='24-04' inline='true' name='federated.1bx7qx20vpkotg14d91mc0vw9rum' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='24-04' name='textscan.04po5vv0yjketf12pdthq0wqywhh'>
            <connection class='textscan' directory='/Users/nguyenbaolong/Desktop/không phải là nháp/data-visualization/Lab2/data' filename='24-04.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.04po5vv0yjketf12pdthq0wqywhh' name='24-04.csv' table='[24-04#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='CountryOther' ordinal='0' />
            <column datatype='integer' name='TotalCases' ordinal='1' />
            <column datatype='integer' name='NewCases' ordinal='2' />
            <column datatype='integer' name='TotalDeaths' ordinal='3' />
            <column datatype='integer' name='NewDeaths' ordinal='4' />
            <column datatype='integer' name='TotalRecovered' ordinal='5' />
            <column datatype='integer' name='NewRecovered' ordinal='6' />
            <column datatype='integer' name='ActiveCases' ordinal='7' />
            <column datatype='integer' name='SeriousCritical' ordinal='8' />
            <column datatype='date' name='Date' ordinal='9' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.04po5vv0yjketf12pdthq0wqywhh' name='24-04.csv' table='[24-04#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='CountryOther' ordinal='0' />
            <column datatype='integer' name='TotalCases' ordinal='1' />
            <column datatype='integer' name='NewCases' ordinal='2' />
            <column datatype='integer' name='TotalDeaths' ordinal='3' />
            <column datatype='integer' name='NewDeaths' ordinal='4' />
            <column datatype='integer' name='TotalRecovered' ordinal='5' />
            <column datatype='integer' name='NewRecovered' ordinal='6' />
            <column datatype='integer' name='ActiveCases' ordinal='7' />
            <column datatype='integer' name='SeriousCritical' ordinal='8' />
            <column datatype='date' name='Date' ordinal='9' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[24-04.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CountryOther</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CountryOther]</local-name>
            <parent-name>[24-04.csv]</parent-name>
            <remote-alias>CountryOther</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[24-04.csv_F3F83E04A2444CCBA3A23BC017457C3A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalCases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalCases]</local-name>
            <parent-name>[24-04.csv]</parent-name>
            <remote-alias>TotalCases</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[24-04.csv_F3F83E04A2444CCBA3A23BC017457C3A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NewCases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[NewCases]</local-name>
            <parent-name>[24-04.csv]</parent-name>
            <remote-alias>NewCases</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[24-04.csv_F3F83E04A2444CCBA3A23BC017457C3A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalDeaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalDeaths]</local-name>
            <parent-name>[24-04.csv]</parent-name>
            <remote-alias>TotalDeaths</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[24-04.csv_F3F83E04A2444CCBA3A23BC017457C3A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NewDeaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[NewDeaths]</local-name>
            <parent-name>[24-04.csv]</parent-name>
            <remote-alias>NewDeaths</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[24-04.csv_F3F83E04A2444CCBA3A23BC017457C3A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalRecovered</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalRecovered]</local-name>
            <parent-name>[24-04.csv]</parent-name>
            <remote-alias>TotalRecovered</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[24-04.csv_F3F83E04A2444CCBA3A23BC017457C3A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NewRecovered</remote-name>
            <remote-type>20</remote-type>
            <local-name>[NewRecovered]</local-name>
            <parent-name>[24-04.csv]</parent-name>
            <remote-alias>NewRecovered</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[24-04.csv_F3F83E04A2444CCBA3A23BC017457C3A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ActiveCases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ActiveCases]</local-name>
            <parent-name>[24-04.csv]</parent-name>
            <remote-alias>ActiveCases</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[24-04.csv_F3F83E04A2444CCBA3A23BC017457C3A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SeriousCritical</remote-name>
            <remote-type>20</remote-type>
            <local-name>[SeriousCritical]</local-name>
            <parent-name>[24-04.csv]</parent-name>
            <remote-alias>SeriousCritical</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[24-04.csv_F3F83E04A2444CCBA3A23BC017457C3A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[24-04.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>9</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[24-04.csv_F3F83E04A2444CCBA3A23BC017457C3A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.1bx7qx20vpkotg14d91mc0vw9rum].[sum:ActiveCases:qk]&quot;' value='Active Cases (phụ thuộc)' />
        </aliases>
      </column>
      <column caption='Active Cases' datatype='integer' name='[ActiveCases]' role='measure' type='quantitative' />
      <column caption='Country Other' datatype='string' name='[CountryOther]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='New Cases' datatype='integer' name='[NewCases]' role='measure' type='quantitative' />
      <column caption='New Deaths' datatype='integer' name='[NewDeaths]' role='measure' type='quantitative' />
      <column caption='New Recovered' datatype='integer' name='[NewRecovered]' role='measure' type='quantitative' />
      <column caption='Serious Critical' datatype='integer' name='[SeriousCritical]' role='measure' type='quantitative' />
      <column caption='Total Cases' datatype='integer' name='[TotalCases]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[TotalDeaths]' role='measure' type='quantitative' />
      <column caption='Total Recovered' datatype='integer' name='[TotalRecovered]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='24-04.csv' datatype='table' name='[__tableau_internal_object_id__].[24-04.csv_F3F83E04A2444CCBA3A23BC017457C3A]' role='measure' type='quantitative' />
      <column-instance column='[ActiveCases]' derivation='Attribute' name='[attr:ActiveCases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[TotalCases]' derivation='Attribute' name='[attr:TotalCases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[TotalCases]' derivation='Count' name='[cnt:TotalCases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[TotalRecovered]' derivation='Count' name='[cnt:TotalRecovered:qk]' pivot='key' type='quantitative' />
      <column-instance column='[TotalRecovered]' derivation='Sum' name='[diff:sum:TotalRecovered:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[ActiveCases]' derivation='None' name='[none:ActiveCases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[CountryOther]' derivation='None' name='[none:CountryOther:nk]' pivot='key' type='nominal' />
      <column-instance column='[NewCases]' derivation='None' name='[none:NewCases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[NewDeaths]' derivation='None' name='[none:NewDeaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[TotalCases]' derivation='None' name='[none:TotalCases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[TotalDeaths]' derivation='None' name='[none:TotalDeaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[TotalRecovered]' derivation='None' name='[none:TotalRecovered:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ActiveCases]' derivation='Sum' name='[sum:ActiveCases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[NewCases]' derivation='Sum' name='[sum:NewCases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[NewDeaths]' derivation='Sum' name='[sum:NewDeaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[TotalCases]' derivation='Sum' name='[sum:TotalCases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[TotalDeaths]' derivation='Sum' name='[sum:TotalDeaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[TotalRecovered]' derivation='Sum' name='[sum:TotalRecovered:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ActiveCases]' derivation='Var' name='[var:ActiveCases:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:CountryOther:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Curaçao&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sint Maarten&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;USA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Diamond Princess&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Turks and Caicos&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Caribbean Netherlands&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;DRC&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;UK&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Réunion&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;UAE&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;St. Barth&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ivory Coast&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;S. Korea&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;St. Vincent Grenadines&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Channel Islands&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Saint Martin&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;CAR&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mayotte&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1bx7qx20vpkotg14d91mc0vw9rum].[attr:TotalCases:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1bx7qx20vpkotg14d91mc0vw9rum].[cnt:TotalCases:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1bx7qx20vpkotg14d91mc0vw9rum].[none:TotalCases:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1bx7qx20vpkotg14d91mc0vw9rum].[sum:TotalCases:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1bx7qx20vpkotg14d91mc0vw9rum].[none:NewDeaths:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1bx7qx20vpkotg14d91mc0vw9rum].[sum:NewDeaths:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1bx7qx20vpkotg14d91mc0vw9rum]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1bx7qx20vpkotg14d91mc0vw9rum].[none:ActiveCases:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1bx7qx20vpkotg14d91mc0vw9rum].[var:ActiveCases:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1bx7qx20vpkotg14d91mc0vw9rum].[attr:ActiveCases:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1bx7qx20vpkotg14d91mc0vw9rum].[cnt:TotalRecovered:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1bx7qx20vpkotg14d91mc0vw9rum].[diff:sum:TotalRecovered:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1bx7qx20vpkotg14d91mc0vw9rum].[none:TotalRecovered:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1bx7qx20vpkotg14d91mc0vw9rum].[sum:ActiveCases:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1bx7qx20vpkotg14d91mc0vw9rum].[sum:TotalRecovered:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1bx7qx20vpkotg14d91mc0vw9rum].[none:NewCases:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1bx7qx20vpkotg14d91mc0vw9rum].[sum:NewCases:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1bx7qx20vpkotg14d91mc0vw9rum].[none:TotalDeaths:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1bx7qx20vpkotg14d91mc0vw9rum].[sum:TotalDeaths:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='24-04.csv' id='24-04.csv_F3F83E04A2444CCBA3A23BC017457C3A'>
            <properties context=''>
              <relation connection='textscan.04po5vv0yjketf12pdthq0wqywhh' name='24-04.csv' table='[24-04#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='CountryOther' ordinal='0' />
                  <column datatype='integer' name='TotalCases' ordinal='1' />
                  <column datatype='integer' name='NewCases' ordinal='2' />
                  <column datatype='integer' name='TotalDeaths' ordinal='3' />
                  <column datatype='integer' name='NewDeaths' ordinal='4' />
                  <column datatype='integer' name='TotalRecovered' ordinal='5' />
                  <column datatype='integer' name='NewRecovered' ordinal='6' />
                  <column datatype='integer' name='ActiveCases' ordinal='7' />
                  <column datatype='integer' name='SeriousCritical' ordinal='8' />
                  <column datatype='date' name='Date' ordinal='9' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Quan hệ tuyến tính 2 biến'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Quan hệ tuyến tính 2 biến</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='24-04' name='federated.1bx7qx20vpkotg14d91mc0vw9rum' />
          </datasources>
          <datasource-dependencies datasource='federated.1bx7qx20vpkotg14d91mc0vw9rum'>
            <column caption='Active Cases' datatype='integer' name='[ActiveCases]' role='measure' type='quantitative' />
            <column caption='Country Other' datatype='string' name='[CountryOther]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Serious Critical' datatype='integer' name='[SeriousCritical]' role='measure' type='quantitative' />
            <column caption='Total Cases' datatype='integer' name='[TotalCases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[TotalDeaths]' role='measure' type='quantitative' />
            <column caption='Total Recovered' datatype='integer' name='[TotalRecovered]' role='measure' type='quantitative' />
            <column-instance column='[CountryOther]' derivation='None' name='[none:CountryOther:nk]' pivot='key' type='nominal' />
            <column-instance column='[ActiveCases]' derivation='Sum' name='[sum:ActiveCases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[SeriousCritical]' derivation='Sum' name='[sum:SeriousCritical:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TotalCases]' derivation='Sum' name='[sum:TotalCases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TotalDeaths]' derivation='Sum' name='[sum:TotalDeaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TotalRecovered]' derivation='Sum' name='[sum:TotalRecovered:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.1bx7qx20vpkotg14d91mc0vw9rum].[none:CountryOther:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.47176796197891235' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1bx7qx20vpkotg14d91mc0vw9rum].[sum:TotalCases:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.1bx7qx20vpkotg14d91mc0vw9rum].[none:CountryOther:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.47176796197891235' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1bx7qx20vpkotg14d91mc0vw9rum].[sum:TotalDeaths:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.1bx7qx20vpkotg14d91mc0vw9rum].[none:CountryOther:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.47176796197891235' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1bx7qx20vpkotg14d91mc0vw9rum].[sum:TotalRecovered:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.1bx7qx20vpkotg14d91mc0vw9rum].[none:CountryOther:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.47176796197891235' />
              </style-rule>
            </style>
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1bx7qx20vpkotg14d91mc0vw9rum].[sum:ActiveCases:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.1bx7qx20vpkotg14d91mc0vw9rum].[none:CountryOther:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.47176796197891235' />
              </style-rule>
            </style>
          </pane>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1bx7qx20vpkotg14d91mc0vw9rum].[sum:SeriousCritical:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.1bx7qx20vpkotg14d91mc0vw9rum].[none:CountryOther:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.47176796197891235' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1bx7qx20vpkotg14d91mc0vw9rum].[sum:TotalCases:qk] + ([federated.1bx7qx20vpkotg14d91mc0vw9rum].[sum:TotalDeaths:qk] + ([federated.1bx7qx20vpkotg14d91mc0vw9rum].[sum:TotalRecovered:qk] + ([federated.1bx7qx20vpkotg14d91mc0vw9rum].[sum:ActiveCases:qk] + [federated.1bx7qx20vpkotg14d91mc0vw9rum].[sum:SeriousCritical:qk]))))</rows>
        <cols>([federated.1bx7qx20vpkotg14d91mc0vw9rum].[sum:TotalCases:qk] + ([federated.1bx7qx20vpkotg14d91mc0vw9rum].[sum:TotalDeaths:qk] + ([federated.1bx7qx20vpkotg14d91mc0vw9rum].[sum:TotalRecovered:qk] + ([federated.1bx7qx20vpkotg14d91mc0vw9rum].[sum:ActiveCases:qk] + [federated.1bx7qx20vpkotg14d91mc0vw9rum].[sum:SeriousCritical:qk]))))</cols>
      </table>
      <simple-id uuid='{4313C3BA-3F88-4754-BD98-B5D06919ABBB}' />
    </worksheet>
    <worksheet name='Total Cases - Total Deaths - Active Cases'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total Cases - Total Deaths - Active Cases
</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='24-04' name='federated.1bx7qx20vpkotg14d91mc0vw9rum' />
          </datasources>
          <datasource-dependencies datasource='federated.1bx7qx20vpkotg14d91mc0vw9rum'>
            <column caption='Active Cases' datatype='integer' name='[ActiveCases]' role='measure' type='quantitative' />
            <column caption='Country Other' datatype='string' name='[CountryOther]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Total Cases' datatype='integer' name='[TotalCases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[TotalDeaths]' role='measure' type='quantitative' />
            <column-instance column='[CountryOther]' derivation='None' name='[none:CountryOther:nk]' pivot='key' type='nominal' />
            <column-instance column='[ActiveCases]' derivation='Sum' name='[sum:ActiveCases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TotalCases]' derivation='Sum' name='[sum:TotalCases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TotalDeaths]' derivation='Sum' name='[sum:TotalDeaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1bx7qx20vpkotg14d91mc0vw9rum].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1bx7qx20vpkotg14d91mc0vw9rum].[sum:TotalCases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1bx7qx20vpkotg14d91mc0vw9rum].[sum:TotalDeaths:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1bx7qx20vpkotg14d91mc0vw9rum].[sum:ActiveCases:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1bx7qx20vpkotg14d91mc0vw9rum].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1bx7qx20vpkotg14d91mc0vw9rum].[sum:TotalCases:qk]&quot;</bucket>
              <bucket>&quot;[federated.1bx7qx20vpkotg14d91mc0vw9rum].[sum:TotalDeaths:qk]&quot;</bucket>
              <bucket>&quot;[federated.1bx7qx20vpkotg14d91mc0vw9rum].[sum:ActiveCases:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1bx7qx20vpkotg14d91mc0vw9rum].[none:CountryOther:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([TotalCases])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:CountryOther:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.1bx7qx20vpkotg14d91mc0vw9rum].[none:CountryOther:nk]' direction='DESC' using='[federated.1bx7qx20vpkotg14d91mc0vw9rum].[sum:TotalCases:qk]' />
          <slices>
            <column>[federated.1bx7qx20vpkotg14d91mc0vw9rum].[none:CountryOther:nk]</column>
            <column>[federated.1bx7qx20vpkotg14d91mc0vw9rum].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1bx7qx20vpkotg14d91mc0vw9rum].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-markers-mode' value='all' />
                <format attr='line-interpolation' value='linear' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1bx7qx20vpkotg14d91mc0vw9rum].[Multiple Values]</rows>
        <cols>[federated.1bx7qx20vpkotg14d91mc0vw9rum].[none:CountryOther:nk]</cols>
      </table>
      <simple-id uuid='{35AD13AA-8B82-4D17-B1E5-D8344DFCD11F}' />
    </worksheet>
    <worksheet name='Total Cases - Total Deaths - Total Recovered'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total Cases - Total Deaths - Total Recovered
</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='24-04' name='federated.1bx7qx20vpkotg14d91mc0vw9rum' />
          </datasources>
          <datasource-dependencies datasource='federated.1bx7qx20vpkotg14d91mc0vw9rum'>
            <column caption='Country Other' datatype='string' name='[CountryOther]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Total Cases' datatype='integer' name='[TotalCases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[TotalDeaths]' role='measure' type='quantitative' />
            <column caption='Total Recovered' datatype='integer' name='[TotalRecovered]' role='measure' type='quantitative' />
            <column-instance column='[CountryOther]' derivation='None' name='[none:CountryOther:nk]' pivot='key' type='nominal' />
            <column-instance column='[TotalCases]' derivation='Sum' name='[sum:TotalCases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TotalDeaths]' derivation='Sum' name='[sum:TotalDeaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TotalRecovered]' derivation='Sum' name='[sum:TotalRecovered:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1bx7qx20vpkotg14d91mc0vw9rum].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1bx7qx20vpkotg14d91mc0vw9rum].[sum:TotalCases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1bx7qx20vpkotg14d91mc0vw9rum].[sum:TotalDeaths:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1bx7qx20vpkotg14d91mc0vw9rum].[sum:TotalRecovered:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1bx7qx20vpkotg14d91mc0vw9rum].[none:CountryOther:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([TotalCases])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:CountryOther:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.1bx7qx20vpkotg14d91mc0vw9rum].[none:CountryOther:nk]' direction='DESC' using='[federated.1bx7qx20vpkotg14d91mc0vw9rum].[sum:TotalCases:qk]' />
          <slices>
            <column>[federated.1bx7qx20vpkotg14d91mc0vw9rum].[none:CountryOther:nk]</column>
            <column>[federated.1bx7qx20vpkotg14d91mc0vw9rum].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1bx7qx20vpkotg14d91mc0vw9rum].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-markers-mode' value='all' />
                <format attr='line-interpolation' value='linear' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1bx7qx20vpkotg14d91mc0vw9rum].[Multiple Values]</rows>
        <cols>[federated.1bx7qx20vpkotg14d91mc0vw9rum].[none:CountryOther:nk]</cols>
      </table>
      <simple-id uuid='{353BC7F6-600E-4DFD-86CA-1240A2532103}' />
    </worksheet>
    <worksheet name='Total Cases - Total Deaths - Total Recovered - Active Cases'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total Cases - Total Deaths - Total Recovered - Active Cases
</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='24-04' name='federated.1bx7qx20vpkotg14d91mc0vw9rum' />
          </datasources>
          <datasource-dependencies datasource='federated.1bx7qx20vpkotg14d91mc0vw9rum'>
            <column caption='Active Cases' datatype='integer' name='[ActiveCases]' role='measure' type='quantitative' />
            <column caption='Country Other' datatype='string' name='[CountryOther]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Total Cases' datatype='integer' name='[TotalCases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[TotalDeaths]' role='measure' type='quantitative' />
            <column caption='Total Recovered' datatype='integer' name='[TotalRecovered]' role='measure' type='quantitative' />
            <column-instance column='[CountryOther]' derivation='None' name='[none:CountryOther:nk]' pivot='key' type='nominal' />
            <column-instance column='[ActiveCases]' derivation='Sum' name='[sum:ActiveCases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TotalCases]' derivation='Sum' name='[sum:TotalCases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TotalDeaths]' derivation='Sum' name='[sum:TotalDeaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TotalRecovered]' derivation='Sum' name='[sum:TotalRecovered:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1bx7qx20vpkotg14d91mc0vw9rum].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1bx7qx20vpkotg14d91mc0vw9rum].[sum:TotalCases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1bx7qx20vpkotg14d91mc0vw9rum].[sum:TotalDeaths:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1bx7qx20vpkotg14d91mc0vw9rum].[sum:TotalRecovered:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1bx7qx20vpkotg14d91mc0vw9rum].[sum:ActiveCases:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1bx7qx20vpkotg14d91mc0vw9rum].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1bx7qx20vpkotg14d91mc0vw9rum].[sum:TotalCases:qk]&quot;</bucket>
              <bucket>&quot;[federated.1bx7qx20vpkotg14d91mc0vw9rum].[sum:TotalDeaths:qk]&quot;</bucket>
              <bucket>&quot;[federated.1bx7qx20vpkotg14d91mc0vw9rum].[sum:TotalRecovered:qk]&quot;</bucket>
              <bucket>&quot;[federated.1bx7qx20vpkotg14d91mc0vw9rum].[sum:ActiveCases:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1bx7qx20vpkotg14d91mc0vw9rum].[none:CountryOther:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([TotalCases])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:CountryOther:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.1bx7qx20vpkotg14d91mc0vw9rum].[none:CountryOther:nk]' direction='DESC' using='[federated.1bx7qx20vpkotg14d91mc0vw9rum].[sum:TotalCases:qk]' />
          <slices>
            <column>[federated.1bx7qx20vpkotg14d91mc0vw9rum].[none:CountryOther:nk]</column>
            <column>[federated.1bx7qx20vpkotg14d91mc0vw9rum].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1bx7qx20vpkotg14d91mc0vw9rum].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-markers-mode' value='all' />
                <format attr='line-interpolation' value='linear' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1bx7qx20vpkotg14d91mc0vw9rum].[Multiple Values]</rows>
        <cols>[federated.1bx7qx20vpkotg14d91mc0vw9rum].[none:CountryOther:nk]</cols>
      </table>
      <simple-id uuid='{498A2DC8-4154-40DF-A3F6-7C37A85E8DBD}' />
    </worksheet>
    <worksheet name='Total Cases - Total Recovered - Active Cases'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total Cases - Total Recovered - Active Cases
</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='24-04' name='federated.1bx7qx20vpkotg14d91mc0vw9rum' />
          </datasources>
          <datasource-dependencies datasource='federated.1bx7qx20vpkotg14d91mc0vw9rum'>
            <column caption='Active Cases' datatype='integer' name='[ActiveCases]' role='measure' type='quantitative' />
            <column caption='Country Other' datatype='string' name='[CountryOther]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Total Cases' datatype='integer' name='[TotalCases]' role='measure' type='quantitative' />
            <column caption='Total Recovered' datatype='integer' name='[TotalRecovered]' role='measure' type='quantitative' />
            <column-instance column='[CountryOther]' derivation='None' name='[none:CountryOther:nk]' pivot='key' type='nominal' />
            <column-instance column='[ActiveCases]' derivation='Sum' name='[sum:ActiveCases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TotalCases]' derivation='Sum' name='[sum:TotalCases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TotalRecovered]' derivation='Sum' name='[sum:TotalRecovered:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1bx7qx20vpkotg14d91mc0vw9rum].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1bx7qx20vpkotg14d91mc0vw9rum].[sum:TotalCases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1bx7qx20vpkotg14d91mc0vw9rum].[sum:TotalRecovered:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1bx7qx20vpkotg14d91mc0vw9rum].[sum:ActiveCases:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1bx7qx20vpkotg14d91mc0vw9rum].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1bx7qx20vpkotg14d91mc0vw9rum].[sum:TotalCases:qk]&quot;</bucket>
              <bucket>&quot;[federated.1bx7qx20vpkotg14d91mc0vw9rum].[sum:TotalRecovered:qk]&quot;</bucket>
              <bucket>&quot;[federated.1bx7qx20vpkotg14d91mc0vw9rum].[sum:ActiveCases:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1bx7qx20vpkotg14d91mc0vw9rum].[none:CountryOther:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([TotalCases])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:CountryOther:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.1bx7qx20vpkotg14d91mc0vw9rum].[none:CountryOther:nk]' direction='DESC' using='[federated.1bx7qx20vpkotg14d91mc0vw9rum].[sum:TotalCases:qk]' />
          <slices>
            <column>[federated.1bx7qx20vpkotg14d91mc0vw9rum].[none:CountryOther:nk]</column>
            <column>[federated.1bx7qx20vpkotg14d91mc0vw9rum].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1bx7qx20vpkotg14d91mc0vw9rum].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-markers-mode' value='all' />
                <format attr='line-interpolation' value='linear' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1bx7qx20vpkotg14d91mc0vw9rum].[Multiple Values]</rows>
        <cols>[federated.1bx7qx20vpkotg14d91mc0vw9rum].[none:CountryOther:nk]</cols>
      </table>
      <simple-id uuid='{3DC601B7-DFB3-40DE-A1DC-2A588514CABB}' />
    </worksheet>
    <worksheet name='Total Cases = Total Deaths + Total Recovered + Active Cases'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total Cases = Total Deaths + Total Recovered + Active Cases</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='24-04' name='federated.1bx7qx20vpkotg14d91mc0vw9rum' />
          </datasources>
          <datasource-dependencies datasource='federated.1bx7qx20vpkotg14d91mc0vw9rum'>
            <column caption='Active Cases' datatype='integer' name='[ActiveCases]' role='measure' type='quantitative' />
            <column caption='Country Other' datatype='string' name='[CountryOther]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Total Cases' datatype='integer' name='[TotalCases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[TotalDeaths]' role='measure' type='quantitative' />
            <column caption='Total Recovered' datatype='integer' name='[TotalRecovered]' role='measure' type='quantitative' />
            <column-instance column='[CountryOther]' derivation='None' name='[none:CountryOther:nk]' pivot='key' type='nominal' />
            <column-instance column='[ActiveCases]' derivation='Sum' name='[sum:ActiveCases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TotalDeaths]' derivation='Sum' name='[sum:TotalDeaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TotalRecovered]' derivation='Sum' name='[sum:TotalRecovered:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1bx7qx20vpkotg14d91mc0vw9rum].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1bx7qx20vpkotg14d91mc0vw9rum].[sum:ActiveCases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1bx7qx20vpkotg14d91mc0vw9rum].[sum:TotalDeaths:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1bx7qx20vpkotg14d91mc0vw9rum].[none:CountryOther:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([TotalCases])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:CountryOther:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.1bx7qx20vpkotg14d91mc0vw9rum].[none:CountryOther:nk]' direction='DESC' using='[federated.1bx7qx20vpkotg14d91mc0vw9rum].[sum:TotalRecovered:qk]' />
          <slices>
            <column>[federated.1bx7qx20vpkotg14d91mc0vw9rum].[none:CountryOther:nk]</column>
            <column>[federated.1bx7qx20vpkotg14d91mc0vw9rum].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1bx7qx20vpkotg14d91mc0vw9rum].[Multiple Values]' field-type='quantitative' reverse='true' scope='cols' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1bx7qx20vpkotg14d91mc0vw9rum].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1bx7qx20vpkotg14d91mc0vw9rum].[Multiple Values]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1bx7qx20vpkotg14d91mc0vw9rum].[:Measure Names]' />
              <lod column='[federated.1bx7qx20vpkotg14d91mc0vw9rum].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#ba9582' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1bx7qx20vpkotg14d91mc0vw9rum].[sum:TotalRecovered:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1bx7qx20vpkotg14d91mc0vw9rum].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#72b966' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1bx7qx20vpkotg14d91mc0vw9rum].[none:CountryOther:nk]</rows>
        <cols>([federated.1bx7qx20vpkotg14d91mc0vw9rum].[Multiple Values] + [federated.1bx7qx20vpkotg14d91mc0vw9rum].[sum:TotalRecovered:qk])</cols>
      </table>
      <simple-id uuid='{52E0DF10-48D9-4F54-9F84-19303C4D98B5}' />
    </worksheet>
    <worksheet name='phương'>
      <table>
        <view>
          <datasources>
            <datasource caption='24-04' name='federated.1bx7qx20vpkotg14d91mc0vw9rum' />
          </datasources>
          <datasource-dependencies datasource='federated.1bx7qx20vpkotg14d91mc0vw9rum'>
            <column caption='Active Cases' datatype='integer' name='[ActiveCases]' role='measure' type='quantitative' />
            <column caption='Country Other' datatype='string' name='[CountryOther]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Total Cases' datatype='integer' name='[TotalCases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[TotalDeaths]' role='measure' type='quantitative' />
            <column caption='Total Recovered' datatype='integer' name='[TotalRecovered]' role='measure' type='quantitative' />
            <column-instance column='[CountryOther]' derivation='None' name='[none:CountryOther:nk]' pivot='key' type='nominal' />
            <column-instance column='[ActiveCases]' derivation='Sum' name='[sum:ActiveCases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TotalCases]' derivation='Sum' name='[sum:TotalCases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TotalDeaths]' derivation='Sum' name='[sum:TotalDeaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TotalRecovered]' derivation='Sum' name='[sum:TotalRecovered:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1bx7qx20vpkotg14d91mc0vw9rum].[sum:TotalRecovered:qk]' included-values='in-range'>
            <min>3080344</min>
            <max>25339874</max>
          </filter>
          <slices>
            <column>[federated.1bx7qx20vpkotg14d91mc0vw9rum].[sum:TotalRecovered:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1bx7qx20vpkotg14d91mc0vw9rum].[sum:ActiveCases:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1bx7qx20vpkotg14d91mc0vw9rum].[sum:ActiveCases:qk]' />
              <size column='[federated.1bx7qx20vpkotg14d91mc0vw9rum].[sum:TotalRecovered:qk]' />
              <text column='[federated.1bx7qx20vpkotg14d91mc0vw9rum].[none:CountryOther:nk]' />
              <lod column='[federated.1bx7qx20vpkotg14d91mc0vw9rum].[none:CountryOther:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2.6408839225769043' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='shape' value=':filled/circle' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1bx7qx20vpkotg14d91mc0vw9rum].[sum:TotalDeaths:qk]</rows>
        <cols>[federated.1bx7qx20vpkotg14d91mc0vw9rum].[sum:TotalCases:qk]</cols>
      </table>
      <simple-id uuid='{C1E4E83F-623A-44CF-9A49-6EB3CABA7DEF}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='Total Cases - Total Deaths - Total Recovered - Active Cases'>
      <cards>
        <edge name='left'>
          <strip size='241'>
            <card type='pages' />
            <card type='filters' />
            <card type='measures' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='197'>
            <card pane-specification-id='7' param='[federated.1bx7qx20vpkotg14d91mc0vw9rum].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1bx7qx20vpkotg14d91mc0vw9rum].[:Measure Names]</field>
            <field>[federated.1bx7qx20vpkotg14d91mc0vw9rum].[none:CountryOther:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6FD2F5BD-595E-4736-A882-598A5F111ED7}' />
    </window>
    <window class='worksheet' name='Total Cases - Total Deaths - Total Recovered'>
      <cards>
        <edge name='left'>
          <strip size='241'>
            <card type='pages' />
            <card type='filters' />
            <card type='measures' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='197'>
            <card pane-specification-id='7' param='[federated.1bx7qx20vpkotg14d91mc0vw9rum].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1bx7qx20vpkotg14d91mc0vw9rum].[:Measure Names]</field>
            <field>[federated.1bx7qx20vpkotg14d91mc0vw9rum].[none:CountryOther:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5C9B17AE-0A1E-489B-9CA5-7B95F1FDB242}' />
    </window>
    <window class='worksheet' name='Total Cases - Total Deaths - Active Cases'>
      <cards>
        <edge name='left'>
          <strip size='241'>
            <card type='pages' />
            <card type='filters' />
            <card type='measures' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='197'>
            <card pane-specification-id='7' param='[federated.1bx7qx20vpkotg14d91mc0vw9rum].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1bx7qx20vpkotg14d91mc0vw9rum].[:Measure Names]</field>
            <field>[federated.1bx7qx20vpkotg14d91mc0vw9rum].[none:CountryOther:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{633BF36A-BB79-4B74-849F-A2B59A6E6113}' />
    </window>
    <window class='worksheet' name='Total Cases - Total Recovered - Active Cases'>
      <cards>
        <edge name='left'>
          <strip size='241'>
            <card type='pages' />
            <card type='filters' />
            <card type='measures' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='197'>
            <card pane-specification-id='7' param='[federated.1bx7qx20vpkotg14d91mc0vw9rum].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight field='[federated.1bx7qx20vpkotg14d91mc0vw9rum].[:Measure Names]'>
          <color-one-way>
            <field>[federated.1bx7qx20vpkotg14d91mc0vw9rum].[:Measure Names]</field>
            <field>[federated.1bx7qx20vpkotg14d91mc0vw9rum].[none:CountryOther:nk]</field>
          </color-one-way>
          <bucket-selection>
            <bucket>&quot;[federated.1bx7qx20vpkotg14d91mc0vw9rum].[sum:TotalRecovered:qk]&quot;</bucket>
          </bucket-selection>
        </highlight>
      </viewpoint>
      <simple-id uuid='{30371DE9-2371-4521-9C5F-D8DE95AAFB13}' />
    </window>
    <window class='worksheet' name='Quan hệ tuyến tính 2 biến'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1bx7qx20vpkotg14d91mc0vw9rum].[none:CountryOther:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5A133FCC-25AB-49CD-A2D7-945A1314CCCC}' />
    </window>
    <window class='worksheet' maximized='true' name='phương'>
      <cards>
        <edge name='left'>
          <strip size='224'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1bx7qx20vpkotg14d91mc0vw9rum].[sum:TotalRecovered:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.1bx7qx20vpkotg14d91mc0vw9rum].[sum:ActiveCases:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{86C65210-77E7-46FB-A145-CAA0227B329F}' />
    </window>
    <window class='worksheet' name='Total Cases = Total Deaths + Total Recovered + Active Cases'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1bx7qx20vpkotg14d91mc0vw9rum].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1bx7qx20vpkotg14d91mc0vw9rum].[:Measure Names]</field>
            <field>[federated.1bx7qx20vpkotg14d91mc0vw9rum].[none:CountryOther:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BBE5EF34-EC81-404B-A4B9-439BFBBFDD2C}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Quan hệ tuyến tính 2 biến' width='192'>
      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
      y6B9+vSQPwASPMr1AoC0xQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='Total Cases - Total Deaths - Active Cases' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Total Cases - Total Deaths - Total Recovered' width='384'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='Total Cases - Total Deaths - Total Recovered - Active Cases' width='384'>
      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
      K7d/68YNnxElD08KDWGE/Xw3LDyhI6VEt6LYjotlWeRdDSOfQwwdR2i+3R5xRMN2bMNATyZB
      CBzHIRIJk83miEQi5PN5DENHCI1isUg0GiWXSRMyNeyijaYJNE3Dtm3C4TD5fB7LsvwySwh0
      XccuFivHTMvCdfw8NQyD4txjponneXieizVyApnzl3N16zdi1rRTLBYxDMPvM3ALaJqO67oY
      hoHjOOiyCNILngfwi1/8gv3799PS0oLjOPzsZz/j+9//Pi+//DIPP/wwBw8e5Omnn+add95h
      27ZtvP/++5XzpZR43myUjuv6N3Q5IgspZDGDlmirtilLGukWsU/9nOJH/y96/VqsB/4cveW+
      apt1A9JzcS6/SfGDn6Al27B2//ENTVX+4Lg5no/nzBb6nuMHMvgXu7GQLwuA55YCB8rHirOt
      kXNq7lJ64ORmz3MKlc8Vfvs/I1MDAOgrH8Tc+j1AIKxSP54RrhTYlAt4IfzmRfCb6crepl56
      viuiIHxvtfKZWYG4mY5c6XlkDv6S4onnEYZB6MEfEN371KI/fydxhz/BPv1zRKwJa/t/hIjU
      LvqzgfMAyjXDlpYWCoUCtm1jzglp27VrF++99x6jo6N0dnby/vvvV46JkoqWCZi23VFEKIkI
      JattxpJH6BbWjj/A3P6PARHYqCKh6Rjrn8BY/4S/v4CdQmh+xFmF+esz3KlfZqx8EOfK24hY
      A3rHbr9ADxhC04g98Y+IffU7vhAFeCZYveVetOb/Frj5vsnACcC2bdt4/vnniUQifPjhh3R1
      dc0r1NetW8cLL7wwLxpIobjdLIUR30vleRChBObmb1bbjM9FCAHm0mhB+KL3PnBNQOBHAp06
      dYr29na6uroQQtDb20tzczPhcJiLFy/S0tJCMpmkt7eXpqamOxIGqlAoFHcTgRSAW4USAIVC
      ofh0gu/XKhQKheK2oARAoVAolilKABQKhWKZogRAoVAolilKABQKhWKZogRAoVAolilKABQK
      hWKZogRAoVAolil3/Sipu3icm0KhUHwp7moBEEJQWHD1JIVCoVDc1QIgpT+PdtCngygUCoRC
      oc8/scqU5xjXAr5we6FQwLKsQE+OVl67YilMV67+n7eOoN334ObUMmKpNFMpO28dS8HGMkvF
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Total Cases - Total Recovered - Active Cases' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAdlklEQVR4nO2dWXAkx5nff1lXV3f1hRuYA5yTnKFISRTJtahjV9RNLS1pQyHZWu+uwxt+
      ssPhF9vhCG/4wZb3weEnO+wXh9+WsldHOFamxBElUaIOUiRFSuIx94UZ3GgAfVRfdaUfCsAA
      M8DgbKAbyF9ERaGrEpXZQP0rv8z6vi+FlFKiUBxQtL1ugEKxlygBKA40SgCKLTE3eYtXXnmd
      ct1bs4zfrFIs11Y9d+nd3/LLV1+j4QUUZucYvX6ZcsNvVXPXxNj1GhX7AMkvf/0Wf/zFL1Ga
      vMFPXr3JwNAAFVdCUMZr1AibHk7O4t1rDU6fyCN8H2mmsQ2DP/jQcc7fmOcTjw3xwxd/ws2b
      13jkxGHCkTF6+wapzEyQyPbiTt0gd+Qhnnz/mZZ9E9UDKLaEICIIQq6cf4+HPvQUV997i6np
      WSbGJ5gvVTmUSyDtLCdPnaI4NcWTH/lDgtIE9BwGoUMU4Hke+b4hjp88SSaZ4PSp44xc/A2/
      uzyOruvMux6PP/pQa7+HmgVSbIXK3BTnr97mwQdPcPniRU6ceZTbl8+DnSafTpJPmUSpPCOX
      LpPu7uLBE8e5+tbLJA+9jyNDfYxcvcB02eODH3iEC79/EyfXS19/L3PFCsWp2zi9R9BDjxMn
      T7T0e7REAFEUoWmqc1GsZGx0lKHDR9DEXrfkDi0RQBiG6Lq+05dVKHYc9ZhWHGiUABQHGiUA
      xYFGCUBxoFECUBxolAAUB5q2EUAQhjT9YK+boThgtI0Apucq3J6cQ72YVuwmbSOA3nwaTbTR
      K0LFgaBtBGAaOpap0/SUGaTYPdpGAEIIsk6ScrW+101RHCDaRgAATipBtd5U4wDFrtFWAtA1
      DcNQZpBi92grAQBkUzaVWmOvm6E4ILSdAJQZpNhN2k4Ahq6jaxqeeimm2AXaTgAAGUeZQYrd
      oS0FkE4mcGvNvW6G4gDQlgLQdQ1NCGUGKVpOWwpACBGbQVVlBilay6YSY7nFAiNjk/QfGsYt
      jCPsHFZYwxk4iladZdY3OTbUuyMNy6RsRqfn6c45COUjpGgRmxJAOpsnWZijND2O5nQR1ktI
      JJWJSTTPJTJsoqibKIq23bDFe97zfQyVYULRIjYlAD8I6enp5ubIbZKJNDIMMUwb4bsI0wYZ
      my9CiB3JC5RxbNyaR3fO2fa1FIrV2JQAvEaV8ckCx06doTo/hegZIJ0wEZFHZKaIAn9JADth
      tmRTNuOFkjKDFC2j7RNjjYwXONTfhWkoM0ix87TlLNBy0so3SNFC2l8Ajo1bayjfIEVLaHsB
      WIZOFEmCcPszSwrF3bS9AIQQpBc8RBWKnabtBQCQSSUpq7fCihbQEQKwTJ0wigiVGaTYYTpC
      AEKIBQ9R1QsodpaOEABA1rEpV9VskGJn6RgBWKZBEIZEkRKAYufoGAEIIXCSajZIsbN0jAAg
      do4rq5diih2kowRgWya+HygzSLFjdJQAhBCk7ATVhjKDFDtDRwkAUKGSih2l4wSQTJh4frAj
      UWcKRccJQAhB0raoNry9bopiH9BxAoD4pZgygxQ7QUcKwLYsGp6vpkMV26YjBaBpgmTCVGaQ
      Ytt0pAAAsk6SiqtWk1Fsj7YRQP3Ntyj/v+c3bNakbIu65xMpM0ixDTaVFqVWnuPG7XF6B49S
      nBzBTPeQiOo4A8No1QKzgcnxob4tNcS7cYPqL39J5gvPwAYzStiWSb3h4SQTW6pTodiUAOx0
      nqOHAgrFWUpug96MIAgjpicmEH51ITNcz5bm6J0vf4nG9Rs0b97EPHZsY79jW5TdOra1qa+h
      UCyxudygc9PM1CKODw8zNHSYq1cukk5lEYGLMJNLmeE0TdtSZrjcs1/AfeEcPf/8n22ofMax
      mS1XdywRl+LgsSkBBFFE0y1SKCZplGfp7j9CLmUhooDITC5lhgO2dEMmzp6l9N3/SzA1hTk4
      uG55IQQJ06DhBaRsa9P1KRRtlxmu9uvXaF6+TNef/9mdDLn3oVJtUGs0GejJbak+xcGmbWaB
      Fkk+/iGaV68SlssbKp9KWtQannopptgSbScAYZo4H/847ks/3VB5XdOwTING029xyxT7kbYT
      AIDz0Y9Q/82bRM2N+f1nVP5QxRZpSwFoqRTJxz5I7VevbKj8YqywMoMUm6UtBQCQ/uxncF96
      CRmsv1CermuYhk7TU4vqKTZH2wpAy2SwTp6k/tvfbah8xkkqF2nFpmlbAQghyHz+c7gvvojc
      wJvldDKBW1cZIxSbo20FAGAODaFlMjQvX1m3rKYJDF1XawsrNkVbCwAg88wzVF44t+6TfXFt
      YZVFWrEZ2l4A1qmTSK+JPzq6btnFdQSUGaTYKG0vACEEmc9+Bvfci+uWNXQdTRN4frgLLVPs
      B9peAAD2o4/ij94mnJ9ft2wmZas06ooN0xECEIZB+lOfovLij2Ad82ZxVUllBik2QkcIACD1
      4b9H4/dvE9XvHwds6BqaEPiBMoMU69MxAhCWReqpD1N9+ef3LycEaWUGKTZIxwgAIP3001R/
      9QqRd/90KBnHplJTCXQV69NRAtDSDvbDZ6m/8cZ9yxm6BlIqM0ixLh0lAID0pz+N+5OfIsO1
      b24hBGlHuUgr1qfjBGD092H099F47/x9yy3mD1WzQYr70XECgEX3iBfuOyVq6DpSSrW2sOK+
      dKQAzOGjCN3AuzmyZpnF2SA1GFbcj00JoFqe47333mWyUOTa5QtcHxlj7PoV5qtNStNjXB+f
      blU7VyCEIPOFz1P5wQ/ua+JkUvHi2soMUqzFpvICJdN5jgz6TM1MYGa6CWslPAHVycllmeF6
      iaKo5Tedcfo0/re+jTc1hd7bu2oZXRMEYYjn++hbSNSl2P9sSgCV2SlmG4ITx45wbXweGQQY
      iSTC35nMcJsl+/nPU3vxx+T//B+tWSadsqk3A3LpZMvbo+g8NiWACGhU5plzkuRtELnDOAl9
      ITOcTRQE28oMt1mSTzxO+fs/ICqX0XOrJ8bKODYz8xXymVTL26PoPNouM9xmqbz4I6J6ndyX
      vrjqeSklIxOzHB3oRteVGaRYScffEc7HPkr9jd8QNVZ/6RWvLWzh1tVskOJeOl4AcQ6hD1B7
      5dU1y2SdJJWqWk1GcS8dLwCA9Cc/ifuzn63pHpGwDPwgVGsLK+5hXwhAy+exjh2j/rvVcwgJ
      IUglE8oMUtzDvhBA/GLsGdwXfrhmDiHlG6RYjTUFcOnt17l07TrjE3O72Z4tYwwMoGUyeFev
      rnretkyafqAW1VOsYE0BjE9Ocv3S24yMTexme7bMHfeI1XMILc4G1dTawoplrCmAI4cP0/R1
      Tp8+vpvt2RbWqVNE9RrB2Piq5xfNIIVikTUFYCYcjg/3c/Xa2h6X7YYQgsznPkfl3LlVzycT
      Fk3PV7NBiiXWFMDU+C2u3xilb6B/N9uzbez3P4o/NkYwd+/YRQhBMqHMIMUdVhXA+bde4fpY
      gWqtjud11tShMAycT3wC98c/WfV8RplBimWsKoCHP/QRBvMJQr9Kpdp5a285H/sozQsXCQqF
      e86lbIu656s1xRTAfUyggeFT9HV3Y2mdl1lB6DqZz32GygvnVg2bjCLJ6NScSqSrWF0AF3//
      GqOT87zviT/k/Wc7ZxZoOcknnqB58RKh6644LoTg2KEejgx0U6zUuD2phHCQWdUdOopCpm5f
      5+/+7nt84Ok/4alHT2zqorvpDn0/Kj98Edlskv3i31/1vJSShuczW3SJpKQvn8FOmLsSy6Bo
      D1YVwJV332S8FPD4hx4jnbQ2fdF2EUBUrzP9n/6a/r/6d2i2vWa5RSHMzLsIoLcrTTKx+e+t
      6Dw6PiBmPYrf+S5GTw/ppz+xblkpJfWmT6FYQROC3nyGhGWoHmEfsy+c4e5H+pNPU3355Q0t
      t7roLnF0oJuurMPUXJnxmSJNz1djhH3KvheA0d2NOTxM/fdvb/h3hBA4yQTDg93k0kkmZ0tM
      FEp4fqCEsM/Y9wIA4uVWz/1w3cU17mYxudbwYA8Zx2Z8psjkghAU+4MDIQBjaAgt7dBcw1V6
      PYQQZFI2Dwz14KQSS0JQ2ac7n00JoO4W+dUrbxDJgDdfe43rI2NcfftNbhfKjF+/xDtXbrao
      mdsjdpX+ApXvv7AtE0YIQdZJMjzUQ9K2GJ2aZ2q2rITQwWw6M1xvVxakJJl2KJfL5NNd1Isz
      iDDE0iOiKNqVzHCbRT/2AKFboTk6hjE0uO3rObZJKpGjXG1we2oOx7bIZ5IqA12HsSkB1CpF
      Jqcmyff2YNs2tZIL2OiBi0z2gN9E0zSklG0zDbqc7DPPUPvRj+j+y3+yY9fsyZt059IUKzXG
      pktkHJvurKNyEHUIm3oPEAY+nh+gGyZEIUI30DURDy6FQErQda2t3gMsR4Yh0//hG/T8y3+B
      0d2949ePooiiW6dUqZFxbLoySgjtzr5/EXY37k9/RlCYJf/Vr7SsjjCKKFZqlNw6pq7T1xW7
      WCjajwP3eEo99WHqr79O8/LlltWhaxo9uTRHB7pp+j7VRmfFVBwkNjUG2A8Iy0JYJrP//X9g
      DA6SeOghEg+fxTp27L7+QlvBNHQeGOrl9tQc+UxKDZDbkANnAgFEzSZCCMJKhebFSzTPX8C7
      fQs9kyHx4IMkHn4Y88hhtOTOpFSfK7kEYURfV0b5FbUZB1IAqyGjiGBmBu/SZRrnz+OPjaHn
      8iTOPIS9IAjMrblKR5FkZKLA4f4uLPPAdbptjRLAGkgpCSYnaV68ROP8eYLxCfSuLhLvexj7
      7Nl4nbJNmDRurUGxUuNwf5fqBdoIJYANIKUEKQmmpmieP0/j/AWCyUmMvj4SZ8+SOHsG89Ah
      hLH2011Kydj0PPmsQzqZ2MXWK+6HEsBWkBIZBARTUzTOX6B58SLB9AzG4AD22TMkzpzF6O9D
      mCunPpt+wMRMkeHBHjRN9QLtgBLADiF9H39sjMaFizQvXCCcncM8dAjpe2T/5MtYDzwAwPRc
      GUPX6c45e9xiBSgBtAwZhjSvXGHuf/4v0k//EdlnnwXil2QjE7MMD3ZjHPC/UTugJqZbhNB1
      7DNnGPj3f0Xt1dcIKxXgzkuymblK2zkMHkSUAFqMnsuR/uxnKH3nu0s3fNax8YKQhqeSc+01
      SgC7gPOxjxKMT+BdvwHEcQX93RmmVS+w5ygB7AJC18n/xZ9RfO65peD8ZMLCMnXKKk/pnqIE
      sEtYR4+SOHUK96WfLh3ry2eYK7mEoUrXvlcoAewi2S99keovfrGUut0wdHLpJLMld53fVLQK
      JYBdRHMcss8+S+lvv7V0LJ9xqNY9lWlij1AC2GWSTz5BVK/TePddADQtHhBPzZXVgHgPUALY
      ZYSmkf/Tr1P81reRXrxSTcq2EEC1rlau2W2UAPYAY2CA5GOPUTn3Q6SUC9OiWWbmK0SR6gV2
      EyWAPUAIQfaPv0Dt9TcIp6cBsEwDJ2lRrFT3uHUHi00LoFqtIoFKaR631qRWqeCHEYFXp1JT
      c9obRVgWua99leL//j9Lq9v35NOU3LpKtLWLbDoz3G9/9x6hV2NkfJob168yPnKVWxOz3L5x
      nZHRsVa1c19iP/oIwrKov/UWEPsJdefSzMxX9rhlB4dNZ4br684Rek0y+W6C6jyaSOE35pHC
      wNRE22aGa1fSX/kKc//1v2GeOYOwbVK2SbFSxa3VsS2VSqXVbEoAlWKBmcI06e5uqrMTCCtN
      V9rG9kPCVBdRs70zw7UjxkA/6Y9/jOrz3yf3D76GEIKB7hxTcyWGB3tU+GSLUfEAbYAMAqa/
      8dd0/9O/xDxyBCklk7MlUgmLXCa1183b16hZoDZAGAb5P/068899ExmGCCHo68owW64qP6EW
      owTQJiQePI3R00Pt1V8DYOg6+XSK2ZKrxlMtRAmgjch97atUzp1bih7LZ1PUGh6er6ZFW4US
      QBuhZ7OkPxNHjwFoC6bQ9LzyE2oVSgBthvPRjxBMTtG8dg1Y8BMSgmpdJdhtBUoAbcbigLj4
      N3cGxP1dmdhPSPUCO44SQBtiDh8lcfoU7ksvAbGfUDplM19WfkI7jRJAGyKEIPvlL1P92c+X
      osd6cg5l5Se04ygBtClaKkn2i89S+tZ3kFKiLfgJFeZVJomdRAmgjUk++SRR1aV5/jwQ5xPy
      g5BGU+UT2imUANqYpeixv/020vOXAmfUtOjOoQTQ5hiDgyQf+yCVc+eQUpKwDBKmScmt73XT
      9gVtIwAZRchQDfDuJl7l/pk4eqxQQAhBb1eauVKVMFJ+QtulbQTQmJ7GvXlzKTpKcQctkYij
      x577JjKKYj+hbIrZosontF3aRgBWPo/hpKmNjREFKkfO3diPPgKGSf2t3wLQlYn9hJoqwe62
      aBsB6LaNPdCPlctTGx0jbKj44uUIIcj/w69R/t73iGq1JZfpaTUtui3aRgAQ/5PNbIbk4AD1
      iUn8svrnLsfo7cV56inKz38fUH5CO0FbCWAR3bZJDR/FK5VoFgpKBMtIf/pTNC9cwB8dU35C
      O0BbCgBA03VSRw4jpaQ2Nk6kZogAEKZJ/utfZ/5vnkNGEaahx35CJeUntBXaVgAQm0R2Xx9m
      Jk3t9ihhU3X1ANbpUxi9PdRefRUhBD05h1JV+QlthbYWAMQisHI57IF+6uMT+K4KERRCxNFj
      P3iB0HXRNI2ck+TmeIH5cpVqvYkfhEgplzbF6mw5K8T05BgBFtmURcLJIIIGtUCQdZItywoR
      BQH18XEMx8Hq7j7wKUPcl1/Gu3GT7n/8FzT9gLlSFcs08IIQ3w8IogiBwNA1LFPHMg1Mw8A0
      dUxdQ9vESvf7la0JIGry+hvvcOqhh5gfu4bMHkKrzlDTbR45fbKlaVFkFNGYnkZGkuTgAOIA
      /xNlGDLzn/8Lua9+hcSpU/eeX3j6B2GE5wd4QYjnB/hBSBCEIASGpmEaOpapY5oGlqFj6Dqa
      Jg7EA2ZLApAyYn5ujpu3RunO5vAiH01KQs3k9IljhAuRTK0kKJfxy2USAwNo5sHNoOaP3KL0
      3Dfp/bf/Bjb5MIgiSRhFBGG8LfUcYUQUSTSNWCCmjmUYWKaBYcR1SCn3xTrHm8oMt4gMA2am
      p7BsBzuZxA4iwmQXkdfYtcxwelcXRsKmMTmFPdCPkTqYCaT0E8dpnDxB/ee/IPPpT+3YdRd7
      Dn+h1/D8gFqzvvQ5khLbMhFCIEQ8LtGEWLG/+7gQYqln0RbO3Tl/b1khoFpvkrITaFprHqgd
      nxku8n1q4+OY2SxWPn8guu27iep1pv/jN+j71/8KvaurpXVJKWnMzuG5VTLDR4jkHVMrWhp0
      c+fnaPXj0bIBevwZZCRXXCuSkqYXkDCNe0wyIQQCENpdwlv4rK0QHHd9XrZ1ugAgtoXrU9MI
      TWD39x/IcUH5+eepfP8Fkk88Hh+IotixMIqQkYQoAhnBwk3G0haBBGS08nh8Z99VNt6Cwgyy
      0cQ6eQKRSKDZNlo6jeY48T69sHfin4VtI0wz3ixrww8pKSVNP8AyFg0ViYx3C/s7QpFSEkUr
      xbXyM/ecl1LuDwFA/Mfy5uYIqjWSh4bQjC1Zdx2LPz6O++OXSD75OMIwQNPiB8HCJjSN2M6I
      9yK2OViwRVYeu2u7Uzb+3XC+SFR1MXp7kU2PqFEncqtEVXdhXyVy3XirVokaDaTvg+8j/QBh
      J9BSKbRkCpFKoqXT6EsCuiMekUriXbpM4uwZ0DSk5yN9D+n7SG9xv/yYH9fj3V1mYR8ESD9A
      Bj4s7PeNABbxXZfmTAF7cAAjmdyTNijWRkYRstEgqtWIavV4vyicRcG48eewVKJ54QLm8DB6
      Jo0wLYRlwmJPYppLx+LeZeHz8vPLj5kGwjDBNBCGER/bbwIACJtN6hOTWF15zGz2QI4L9gNS
      SsJCAb2np2Vm7b4UAMTjgtrEJLplkeht3R9Q0dns27tC6Dqpw4dAQG1cOdMpVmffCgAWnOl6
      e7GyWWq3bitnOsU97FsTaDlSSqKFcUGitwcjnVbjAgVwQASwSBQE1Ccm0CwLK5dDt+29bpJi
      jzlQAoB4Gs69fiMOJslkMNJpDCd1Z75bcaA4cAKAeIYIIQjrDXzXJazXELqBkXYwHSeeH1Zi
      OBAcSAHcjZSSyPcJXJegWo1z7yRTGOk0up1QU6j7GCWAu5BSIsOQsFbHd10ir4lmJTDSDkbK
      Qeia6h32EUoA6yClJGw0FnqHGkITGE4aI+2gbcKxS9GeKAFsAiklMggI3GocmxwE6KkkZjqN
      nkwqU6kDUQLYKlIio4igXidwXcJGA800497BScXOVqp3aHuUAHaIxZdtvlslrFWRklgIQmA4
      TuyiTBycwZrCELDGqfXEtOi3v+S6rNgQSgCtQEqiMCSouNSnpmLzSAhgMcBkQxdZsYuFcbff
      /qIwBFJGhPUGie5utISFZlloajp3XbYsALc0D1YKLfQwkw4ibNIINNKphBLAAkvRVMtfskm5
      sfv/3outvKZcjNgCWBibVGtolknkeYSeh/SDuG7DQLcWRJGw0AxDmWgLbEkAkVfj/NXbyCgg
      iYfIH0GrTuMKm0cfbG1aFMXGkXEcIFEYEjU9Im9h8/14DWJdR5jLxGHF4kBrj6leKSVhvY5u
      2y2bYNhS3GDgNcl0dRNU59FECr8xj8TAalHkvmJrCCFA19F1Hd2yVpyLZ7RCosCPe4xGA79U
      JgoDiCTCNNBMKxbHgkkl7nqoLRfJPc/R5T1WGCGjMI4GW4xVDqOVn6O7Pss4ljlqNhfMOSMW
      rK4jdANh6GgLe6EbaIZ+J4yTRYtx/ftxSwIwUxmqN84jEmm60ja2HxJm47Qois5ACLFwkxtw
      V+jo4pvxyIvF4ZcrRJ6HjEKWBuoSNMtaceOuURFC0+IXiJqG0HSEvhCnbOhomrkUuyyWxS4v
      7sNGAz2RWFpCa3GLgoCw2UTWQmQQxPEey0QoFq6/KA6xJBYdbUFIaJoaBCs2xtJtEkX4FZfI
      9zHTadCX3bhwz1N3t0ypFbfxwhS1DIIlscgwjHu8MFgSEVELskJEUUQYhruWdzKKon1X1378
      TrtZ14brkXJrJtD9WKx4t/6ocbKj/VXXfvxOu1nX8sRX69GS1mz0S84WZpHA7GyBsZHrXLxy
      g0hKrl29ykbXitxIXbOFwj3H5otFKpXKBmvZWF03rlzk/IVLNP3VWx/6DarVKoX58tbriQIu
      vPsON0cn1m3vRrhfXX69wjvvvMPtiZm1mxP6uNWNrVm8dl0Bl999m9++/R4Nb2XsdnW+iLeh
      q6+sZ6Om155mj5qZKdDd28PMzAS1SpPjD50hrJcolUoUSnX6czuT16cwM0OjVqZULNM/fJLp
      sRFqPgz25QkaLqOTBU4//Ai2vj17td7wsAyNubkppiZmOXJkkImJSQ4dGuLWjSt09x8ilUpS
      KDfp7cpurRIZUG2GDGUzXLt0HjvbS61UwMr0UC9O4UmLw30ZJop1BvMpJmfmOX76IZzE5v/V
      Xt0l33+E6twUo5FHPpWgXKszM1fh6FAfo5MzHHvgMLV6yMzECIHucPr40S18KYPjwwOMuCaF
      mUmO9GcZnSxTmC+SNQysoI6tWcxMTZLN59FMB+nXOHTo0BbqWskee29FRKEPWDz8yFmuX77I
      yK1RpBCMj43taE1eCA+fPMzYxBRdA8PkM0kqboXifJFacZpidftLswqhYVkmXqNKvv8oDbeE
      XytRrPk4uT76HI1ac2fq0YQgxKA3Z+HWPcbHxrFSGbpSCabmXc6ePsHtWzdBSnx/q3VKLr/z
      JoGRolKp0KhVCKSOpYfUPYkpIipulWqtQnG+yvj46La/W6VSIQwaVMouya4BHAuu3ZygXpyi
      0ggJpYE7O0rd25mh6572AEcPDXDx4hWOHjvO5Phtst195HNpTvb0MDc7u2P19Pb3x7NSlsXw
      EYfC+C2sdJ4uO0/YrJKPDpFObP9ZYCcMXA8eGBogwiasObiNHhI0mW00qEVZ8tkk6XAb/zxh
      cOzYA2QzDtFAP4Zpk0za9PTlyaZtNKBLk1y5dpMTJ08xPl3ETmwtfbyVzPLkUx+jVp5HFxmm
      58oMDGSpVQxSqQSVkkEmncFJSaJGjazdt+WvpSXS9Gg6RrKHKyMz9PYPYCYdzMDgD44auOUG
      WW8Gx3FoFqcYPDy05bqW8/8BsRmJ9pC9t5EAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Total Cases = Total Deaths + Total Recovered + Active Cases' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='phương' width='384'>
      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
      rkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
